# -*- coding: utf-8 -*-
"""PROYECTO_INGENIERIA_DE_SOFTWARE.

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1H2SimltLtGygcRtqeS5fgtMP-agLZLXw
"""

import csv
from tabulate import tabulate

# Contraseña de acceso
contrasena = "Alumnos"

# Ruta del archivo CSV donde se guardarán los datos
archivo_csv = "datos.csv"

# Crear una lista para almacenar los datos en forma de vectores
datos = []

# Función para cargar los datos desde el archivo CSV al inicio del programa
def cargar_datos():
    try:
        with open(archivo_csv, mode='r') as file:
            reader = csv.reader(file)
            for row in reader:
                datos.append(row)
    except FileNotFoundError:
        pass

# Primera función para agregar datos
def agregar_dato():
    Id = input("Ingrese el código verificador: ")
    Nombre = input("Ingrese el Nombre: ")
    Apellido = input("Ingrese el Apellido: ")
    Dirección = input("Ingrese la Dirección: ")
    Padre = input("Ingrese el Nombre del tutor: ")

    # Almacenar los datos como una lista de campos
    nueva_persona = [Id, Nombre, Apellido, Dirección, Padre]
    datos.append(nueva_persona)
    print("Datos agregados con éxito.")

    # Guardar los datos en el archivo CSV
    with open(archivo_csv, mode='a', newline='') as file:
        writer = csv.writer(file)
        writer.writerow(nueva_persona)

# Segunda función para mostrar los datos en forma de tabla
def mostrar_datos():
    if datos:
        # Utiliza tabulate para mostrar los datos en una tabla
        tabla = tabulate(datos, headers=["ID ", " Nombre ", " Apellido ", " Dirección ", " Nombre del tutor "], tablefmt="grid")
        print("\nTabla de Datos:")
        print(tabla)
    else:
        print("No hay datos para mostrar.")

# Tercera función para buscar y mostrar datos de una persona por ID o por nombre y apellido
def buscar_persona():
    opcion_busqueda = input("Seleccione una opción de búsqueda (1 para ID, 2 para Nombre y Apellido): ")
    if opcion_busqueda == "1":
        id_buscar = input("Ingrese el ID de la persona a buscar: ")
        for persona in datos:
            if persona[0] == id_buscar:
                tabla = tabulate([persona], headers=["ID ", " Nombre ", " Apellido ", " Dirección ", " Nombre del tutor "], tablefmt="grid")
                print("\nDatos de la persona:")
                print(tabla)
                return
        print("No se encontró ninguna persona con ese ID.")
    elif opcion_busqueda == "2":
        nombre_buscar = input("Ingrese el Nombre de la persona a buscar: ")
        apellido_buscar = input("Ingrese el Apellido de la persona a buscar: ")
        for persona in datos:
            if persona[1] == nombre_buscar and persona[2] == apellido_buscar:
                tabla = tabulate([persona], headers=["ID", "Nombre", "Apellido", "Dirección", "Nombre del tutor"], tablefmt="grid")
                print("\nDatos de la persona:")
                print(tabla)
                return
        print("No se encontró ninguna persona con ese Nombre y Apellido.")
    else:
        print("Opción de búsqueda no válida.")

# Cuarta función para borrar una persona por ID
def borrar_persona():
    if not datos:
        print("No hay datos para borrar.")
        return

    id_borrar = input("Ingrese el ID de la persona que desea borrar: ")
    encontrado = False

    for persona in datos:
        if persona[0] == id_borrar:
            datos.remove(persona)
            print("Persona eliminada con éxito.")
            encontrado = True
            # Eliminar la persona del archivo CSV
            with open(archivo_csv, mode='w', newline='') as file:
                writer = csv.writer(file)
                for row in datos:
                    writer.writerow(row)

            break

    if not encontrado:
        print("No se encontró ninguna persona con ese ID.")

# Quinta función para ver los datos guardados en el archivo CSV
def ver_datos_guardados():
    try:
        with open(archivo_csv, mode='r') as file:
            reader = csv.reader(file)
            print("\nDatos guardados en el archivo CSV:")
            for row in reader:
                print(row)
    except FileNotFoundError:
        print("El archivo CSV aún no contiene datos.")

# Función principal
def main():
    # Cargar los datos desde el archivo CSV al inicio del programa
    cargar_datos()

    # Solicitar la contraseña al usuario
    input_contrasena = input("Ingrese la contraseña: ")

    if input_contrasena != contrasena:
        print("Contraseña incorrecta. Saliendo del programa.")
        return
    while True:
        print("\nOpciones:")
        print("1. Agregar dato")
        print("2. Mostrar datos")
        print("3. Buscar persona")
        print("4. Borrar persona")
        print("5. Ver datos guardados en la memoria")  # Opción para ver los datos guardados
        print("6. Salir del programa")
        opcion = input("Seleccione una opción: ")

        if opcion == "1":
            agregar_dato()
        elif opcion == "2":
            mostrar_datos()
        elif opcion == "3":
            buscar_persona()
        elif opcion == "4":
            borrar_persona()
        elif opcion == "5":
            ver_datos_guardados()  # Llamar a la función para ver datos guardados
        elif opcion == "6":
            break
        else:
            print("Opción no válida. Intente de nuevo.")

if __name__ == "__main__":
    main()